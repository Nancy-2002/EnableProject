[{"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\index.js":"1","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\App.js":"2","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\reportWebVitals.js":"3","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\authComponent\\AuthComponent.js":"4","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\RegistrationPage.js":"5","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\LoginPage.js":"6","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\dashboard.js":"7","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\IncidentForm.js":"8","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\incidentlist.js":"9","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\SupIncident.js":"10","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Error.js":"11","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\EmpIncident.js":"12","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\SupDash.js":"13","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Navbar.tsx":"14","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Sidebar.js":"15","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\RegistrationForm.js":"16","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Carousel.js":"17","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\LoginForm.js":"18","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\services\\userService.js":"19","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Sidepanel.js":"20","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\services\\helper.js":"21","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Navibar.js":"22"},{"size":552,"mtime":1694339240861,"results":"23","hashOfConfig":"24"},{"size":330,"mtime":1694339240846,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1694339240863,"results":"26","hashOfConfig":"24"},{"size":1767,"mtime":1694368016596,"results":"27","hashOfConfig":"24"},{"size":354,"mtime":1694339240851,"results":"28","hashOfConfig":"24"},{"size":406,"mtime":1694339240849,"results":"29","hashOfConfig":"24"},{"size":675,"mtime":1694369084921,"results":"30","hashOfConfig":"24"},{"size":10760,"mtime":1694369070608,"results":"31","hashOfConfig":"24"},{"size":5456,"mtime":1694421577883,"results":"32","hashOfConfig":"24"},{"size":21184,"mtime":1694369032261,"results":"33","hashOfConfig":"24"},{"size":211,"mtime":1694339240848,"results":"34","hashOfConfig":"24"},{"size":8523,"mtime":1694417632764,"results":"35","hashOfConfig":"24"},{"size":1396,"mtime":1694369046308,"results":"36","hashOfConfig":"24"},{"size":940,"mtime":1694420834295,"results":"37","hashOfConfig":"24"},{"size":604,"mtime":1694339240852,"results":"38","hashOfConfig":"24"},{"size":9127,"mtime":1694422127934,"results":"39","hashOfConfig":"24"},{"size":569,"mtime":1694339240847,"results":"40","hashOfConfig":"24"},{"size":8666,"mtime":1694422389996,"results":"41","hashOfConfig":"24"},{"size":1503,"mtime":1694339240864,"results":"42","hashOfConfig":"24"},{"size":670,"mtime":1694339240852,"results":"43","hashOfConfig":"24"},{"size":147,"mtime":1694339240864,"results":"44","hashOfConfig":"24"},{"size":1544,"mtime":1694421059448,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"6nmhdi",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"49"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"49"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\index.js",[],[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\App.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\reportWebVitals.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\authComponent\\AuthComponent.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\RegistrationPage.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\LoginPage.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\dashboard.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\IncidentForm.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\incidentlist.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\SupIncident.js",["116"],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Error.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\EmpIncident.js",["117"],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\SupDash.js",["118"],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Navbar.tsx",["119"],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Sidebar.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\RegistrationForm.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Carousel.js",["120","121"],[],"import React from 'react';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport './App.css'; // You can create your own CSS file for styling\r\n\r\nconst ImageCarousel = () => {\r\n  return (\r\n    <div class=\"carousel\">\r\n    <Carousel showThumbs={false} infiniteLoop={true}>\r\n      <div>\r\n        <img src=\"Enable.gif\" alt=\"Image 1\" />\r\n      </div>\r\n      <div>\r\n        <img src=\"vision1.jpeg\" alt=\"Image 3\" />\r\n      </div>\r\n    </Carousel>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCarousel;\r\n","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\LoginForm.js",["122","123"],[],"// import React, { useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import { login } from './services/userService';\r\n// import { toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n\r\n// const LoginForm = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     empType: '', // Initialize with an empty string\r\n//   });\r\n//   const [loginData, setLoginData] = useState({\r\n//     email: '',\r\n//     password: '',\r\n//     empType: '',\r\n//   });\r\n\r\n\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n//   const navigate = useNavigate();\r\n  \r\n\r\n//   const handleSubmit = async (e) => {\r\n//     console.log('loginData:', loginData);\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const response = await login(loginData);\r\n//       const userEmail = loginData.email;\r\n//       const selectedEmpType = loginData.empType;\r\n\r\n//     // Handle success and navigate based on the selected employee type\r\n//     if (selectedEmpType === 'admin') {\r\n//       console.log('Redirecting to support or admin dashboard');\r\n//       console.log('userEmail:', userEmail);\r\n//       navigate(`/admin/dashboard`);\r\n//     } else if (selectedEmpType === 'team') {\r\n//       console.log('Redirecting to employee dashboard');\r\n//       console.log('userEmail:', userEmail);\r\n//       navigate(`/employee/dashboard/${userEmail}`);\r\n//     } \r\n//     else if (selectedEmpType === 'support') {\r\n//       console.log('Redirecting to employee dashboard');\r\n//       console.log('userEmail:', userEmail);\r\n//       navigate(`/support/incident`);\r\n//     }\r\n//     else {\r\n//       // Handle cases where no employee type is selected\r\n//       toast.error('Please select an employee type.');\r\n//     }\r\n\r\n//     toast.success(response);\r\n//     setIsLoggedIn(true);\r\n//     localStorage.setItem('email',loginData.email)\r\n//     localStorage.setItem('role',loginData.empType)\r\n//   } catch (error) {\r\n//     console.error(error);\r\n//     toast.error('Invalid Credentials');\r\n//   }\r\n// };\r\n\r\n//       // Handle success\r\n//        //window.location.href = '/employee/dashboard/:email';\r\n\r\n//     //navigate(`/employee/incident_list/${userEmail}`);\r\n//     //navigate(`/employee/dashboard/:email/${}`);\r\n \r\n\r\n     \r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n\r\n//      {\r\n//       setLoginData({\r\n//         ...loginData,\r\n//         [name]: value,\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-form\">\r\n//       <h2>SIGN IN</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <div className=\"field\">\r\n//           <label>Email:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"email\"\r\n//             name=\"email\"\r\n//             value={loginData.email}\r\n//             onChange={handleInputChange}\r\n//             className=\"password\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"field\">\r\n//           <label>Password:</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             id=\"password\"\r\n//             name=\"password\"\r\n//             value={loginData.password}\r\n//             onChange={handleInputChange}\r\n//             className=\"password\"\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"field\">\r\n//           <label htmlFor=\"empType\">Employee Type:</label>\r\n//           <select\r\n//             id=\"empType\"\r\n//             name=\"empType\"\r\n//             value={loginData.empType}\r\n//             onChange={handleInputChange}\r\n//             required\r\n//             className=\"dropdown\"\r\n//           >\r\n//             <option value=\"\">Select an employee type</option>\r\n//             <option value=\"support\">Support Staff</option>\r\n//             <option value=\"team\">Team Member</option>\r\n//             <option value=\"admin\">Admin</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <button type=\"submit\">SIGN IN</button>\r\n//         <p>\r\n//           Don't have an account?&nbsp;&nbsp;\r\n//           <Link to=\"/register\">Register</Link>\r\n//         </p>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { login } from './services/userService';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n} from '@mui/material';\r\n\r\nconst LoginForm = () => {\r\n  const [loginData, setLoginData] = useState({\r\n    email: '',\r\n    password: '',\r\n    empType: '',\r\n  });\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await login(loginData);\r\n      const userEmail = loginData.email;\r\n      const selectedEmpType = loginData.empType;\r\n\r\n      if (selectedEmpType === 'admin') {\r\n        navigate(`/admin/dashboard`);\r\n      } else if (selectedEmpType === 'team') {\r\n        navigate(`/employee/dashboard/${userEmail}`);\r\n      } else if (selectedEmpType === 'support') {\r\n        navigate(`/support/incident`);\r\n      } else {\r\n        toast.error('Please select an employee type.');\r\n      }\r\n\r\n      toast.success(response);\r\n      setIsLoggedIn(true);\r\n      localStorage.setItem('email', loginData.email);\r\n      localStorage.setItem('role', loginData.empType);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error('Invalid Credentials');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLoginData({\r\n      ...loginData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" padding=\"50px\">\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <Paper elevation={3} style={{ padding: 20, background: 'rgba(255, 255, 255, 0.9)' }}>\r\n            <Typography variant=\"h5\" style={{ marginBottom: 20, textAlign: 'center' }}><b>\r\n              SIGN IN\r\n              </b> </Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"text\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={loginData.email}\r\n                onChange={handleInputChange}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                required\r\n              />\r\n\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={loginData.password}\r\n                onChange={handleInputChange}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                required\r\n              />\r\n\r\n              <FormControl variant=\"outlined\" fullWidth margin=\"normal\">\r\n                <InputLabel htmlFor=\"empType\">Employee Type</InputLabel>\r\n                <Select\r\n                  id=\"empType\"\r\n                  name=\"empType\"\r\n                  value={loginData.empType}\r\n                  onChange={handleInputChange}\r\n                  label=\"Employee Type\"\r\n                  required\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>Select an employee type</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"support\">Support Staff</MenuItem>\r\n                  <MenuItem value=\"team\">Team Member</MenuItem>\r\n                  <MenuItem value=\"admin\">Admin</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" style={{ width: '100%' }}>\r\n                  SIGN IN\r\n                </Button>\r\n              </Box>\r\n\r\n              <Box mt={2} style={{ borderTop: '1px solid #ccc', paddingTop: '10px' }}>\r\n                <Typography variant=\"body2\" style={{ marginTop: 10, textAlign: 'center' }}>\r\n                  Don't have an account?&nbsp;&nbsp;\r\n                  <Link to=\"/register\" style={{ marginRight: 1, color: 'black' }}><b>\r\n                    Register\r\n                    </b></Link>\r\n                </Typography>\r\n              </Box>\r\n            </form>\r\n          </Paper>\r\n        </Container>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\services\\userService.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Sidepanel.js",["124","125","126","127","128"],[],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Sidepanel.css';\r\n\r\nfunction Sidepanel(props) {\r\n  return (\r\n    <div id=\"mySidepanel\" className={`sidepanel ${props.isOpen ? 'open' : ''}`}>\r\n      <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={props.onClose}>\r\n        &times;\r\n      </a>\r\n      <ul>\r\n        <li><a><Link to=\"/employee/dashboard/:email\">Dashboard</Link></a></li>\r\n        <li><a><Link to=\"/employee/incident_form\">Report an Incident</Link></a></li>\r\n        <li><a><Link to=\"/employee/incident_list/:email\">Incident List</Link></a></li>\r\n      </ul>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidepanel;\r\n","C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\services\\helper.js",[],[],"C:\\Users\\leksh\\Desktop\\project_enable\\EnableProject\\enable\\src\\Navibar.js",["129","130","131","132"],[],{"ruleId":"133","severity":1,"message":"134","line":385,"column":7,"nodeType":"135","messageId":"136","endLine":385,"endColumn":27},{"ruleId":"133","severity":1,"message":"137","line":16,"column":10,"nodeType":"135","messageId":"136","endLine":16,"endColumn":18},{"ruleId":"133","severity":1,"message":"138","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":17},{"ruleId":"141","severity":1,"message":"142","line":11,"column":9,"nodeType":"143","endLine":11,"endColumn":47},{"ruleId":"141","severity":1,"message":"142","line":14,"column":9,"nodeType":"143","endLine":14,"endColumn":49},{"ruleId":"133","severity":1,"message":"144","line":153,"column":3,"nodeType":"135","messageId":"136","endLine":153,"endColumn":7},{"ruleId":"133","severity":1,"message":"145","line":162,"column":10,"nodeType":"135","messageId":"136","endLine":162,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":8,"column":7,"nodeType":"143","endLine":8,"endColumn":81},{"ruleId":"148","severity":1,"message":"149","line":8,"column":15,"nodeType":"150","messageId":"151","endLine":8,"endColumn":35},{"ruleId":"146","severity":1,"message":"152","line":12,"column":13,"nodeType":"143","endLine":12,"endColumn":16},{"ruleId":"146","severity":1,"message":"152","line":13,"column":13,"nodeType":"143","endLine":13,"endColumn":16},{"ruleId":"146","severity":1,"message":"152","line":14,"column":13,"nodeType":"143","endLine":14,"endColumn":16},{"ruleId":"133","severity":1,"message":"140","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":17},{"ruleId":"133","severity":1,"message":"153","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":14},{"ruleId":"133","severity":1,"message":"154","line":9,"column":16,"nodeType":"135","messageId":"136","endLine":9,"endColumn":27},{"ruleId":"133","severity":1,"message":"155","line":12,"column":9,"nodeType":"135","messageId":"136","endLine":12,"endColumn":21},"no-unused-vars","'initialIncidentsData' is assigned a value but never used.","Identifier","unusedVar","'userName' is assigned a value but never used.","'Link' is defined but never used.","@typescript-eslint/no-unused-vars","'CardMedia' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Grid' is defined but never used.","'isLoggedIn' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Button' is defined but never used.","'useNavigate' is defined but never used.","'handleLogout' is assigned a value but never used."]