{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leksh\\\\Desktop\\\\project_enable\\\\EnableProject\\\\enable\\\\src\\\\SupAssgn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SupAssgn.css';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IncidentAssignmentPage = () => {\n  _s();\n  // Sample incident data\n  const sampleIncident = {\n    title: 'Sample Incident',\n    description: 'This is a sample incident description.',\n    priority: 'High',\n    dateCreated: '2023-08-23'\n  };\n\n  // Sample staff list\n  const staffList = ['Staff Member 1', 'Staff Member 2', 'Staff Member 3'];\n  const [selectedStaff, setSelectedStaff] = useState('');\n  const handleAssign = () => {\n    // Perform the assignment logic here, using the selectedStaff value\n    // For this example, we'll just log the assigned staff member\n    console.log(`Assigned staff: ${selectedStaff}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"incident-assignment\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Assign Incident\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"incident-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 12\n        }, this), \" \", sampleIncident.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 12\n        }, this), \" \", sampleIncident.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Priority:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 12\n        }, this), \" \", sampleIncident.priority]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date Created:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 12\n        }, this), \" \", sampleIncident.dateCreated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assign-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"staff\",\n        children: \"Assign To:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"staff\",\n        value: selectedStaff,\n        onChange: e => setSelectedStaff(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Staff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), staffList.map((staff, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: staff,\n          children: staff\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAssign,\n        children: \"Assign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(IncidentAssignmentPage, \"FpkGbKAQldzLQ1yub+Gp2YidVC0=\");\n_c = IncidentAssignmentPage;\nexport default IncidentAssignmentPage;\nvar _c;\n$RefreshReg$(_c, \"IncidentAssignmentPage\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","IncidentAssignmentPage","_s","sampleIncident","title","description","priority","dateCreated","staffList","selectedStaff","setSelectedStaff","handleAssign","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","staff","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/leksh/Desktop/project_enable/EnableProject/enable/src/SupAssgn.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SupAssgn.css';\r\nimport Navbar from './Navbar';\r\n\r\nconst IncidentAssignmentPage = () => {\r\n  // Sample incident data\r\n  const sampleIncident = {\r\n    title: 'Sample Incident',\r\n    description: 'This is a sample incident description.',\r\n    priority: 'High',\r\n    dateCreated: '2023-08-23',\r\n  };\r\n\r\n  // Sample staff list\r\n  const staffList = ['Staff Member 1', 'Staff Member 2', 'Staff Member 3'];\r\n\r\n  const [selectedStaff, setSelectedStaff] = useState('');\r\n  \r\n  const handleAssign = () => {\r\n    // Perform the assignment logic here, using the selectedStaff value\r\n    // For this example, we'll just log the assigned staff member\r\n    console.log(`Assigned staff: ${selectedStaff}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"incident-assignment\">\r\n      <h2>Assign Incident</h2>\r\n      <div className=\"incident-details\">\r\n        <p><strong>Title:</strong> {sampleIncident.title}</p>\r\n        <p><strong>Description:</strong> {sampleIncident.description}</p>\r\n        <p><strong>Priority:</strong> {sampleIncident.priority}</p>\r\n        <p><strong>Date Created:</strong> {sampleIncident.dateCreated}</p>\r\n      </div>\r\n      <div className=\"assign-form\">\r\n        <label htmlFor=\"staff\">Assign To:</label>\r\n        <select\r\n          id=\"staff\"\r\n          value={selectedStaff}\r\n          onChange={(e) => setSelectedStaff(e.target.value)}\r\n        >\r\n          <option value=\"\">Select Staff</option>\r\n          {staffList.map((staff, index) => (\r\n            <option key={index} value={staff}>\r\n              {staff}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={handleAssign}>Assign</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncidentAssignmentPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}