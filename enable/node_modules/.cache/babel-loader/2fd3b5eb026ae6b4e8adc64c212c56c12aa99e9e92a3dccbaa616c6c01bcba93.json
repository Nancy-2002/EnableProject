{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leksh\\\\Desktop\\\\project_enable\\\\EnableProject\\\\enable\\\\src\\\\SupIncidentlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExampleIncidentPage = () => {\n  _s();\n  const [selectedIncident, setSelectedIncident] = useState(null);\n  const [assignedStaff, setAssignedStaff] = useState('');\n  const [incidents, setIncidents] = useState([{\n    id: 1,\n    title: 'Network Outage',\n    status: 'Pending',\n    dateCreated: '2023-08-20',\n    priority: 'High',\n    reporter: 'John Doe',\n    description: 'Users are unable to access the company network.'\n  }\n  // Add more incidents here...\n  ]);\n\n  const handleIncidentClick = incident => {\n    setSelectedIncident(incident);\n    setAssignedStaff('');\n  };\n  const handleAssignStaff = incidentId => {\n    // Here you can update the assigned staff for the incident in your state or make an API call.\n    // For this example, let's just update the local state.\n    const updatedIncidents = incidents.map(incident => {\n      if (incident.id === incidentId) {\n        return {\n          ...incident,\n          assignedStaff: assignedStaff\n        };\n      }\n      return incident;\n    });\n    setIncidents(updatedIncidents);\n    setAssignedStaff('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reported Incidents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Assigned Staff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: incidents.map(incident => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleIncidentClick(incident),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: incident.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: incident.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: incident.dateCreated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: incident.priority\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: incident.assignedStaff || 'Unassigned'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), selectedIncident && selectedIncident.id === incident.id && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Reporter: \", incident.reporter]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Description: \", incident.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"assignStaff\",\n                  children: \"Assign Staff:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"assignStaff\",\n                  value: assignedStaff,\n                  onChange: e => setAssignedStaff(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select Staff\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"staff1\",\n                    children: \"Staff 1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"staff2\",\n                    children: \"Staff 2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleAssignStaff(incident.id),\n                  children: \"Assign\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, incident.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ExampleIncidentPage, \"+v030Ns9gdGxBXKql3k3CVZGIbg=\");\n_c = ExampleIncidentPage;\nexport default ExampleIncidentPage;\nvar _c;\n$RefreshReg$(_c, \"ExampleIncidentPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExampleIncidentPage","_s","selectedIncident","setSelectedIncident","assignedStaff","setAssignedStaff","incidents","setIncidents","id","title","status","dateCreated","priority","reporter","description","handleIncidentClick","incident","handleAssignStaff","incidentId","updatedIncidents","map","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","onClick","colSpan","htmlFor","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/leksh/Desktop/project_enable/EnableProject/enable/src/SupIncidentlist.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ExampleIncidentPage = () => {\r\n  const [selectedIncident, setSelectedIncident] = useState(null);\r\n  const [assignedStaff, setAssignedStaff] = useState('');\r\n  const [incidents, setIncidents] = useState([\r\n    {\r\n      id: 1,\r\n      title: 'Network Outage',\r\n      status: 'Pending',\r\n      dateCreated: '2023-08-20',\r\n      priority: 'High',\r\n      reporter: 'John Doe',\r\n      description: 'Users are unable to access the company network.',\r\n    },\r\n    // Add more incidents here...\r\n  ]);\r\n\r\n  const handleIncidentClick = (incident) => {\r\n    setSelectedIncident(incident);\r\n    setAssignedStaff('');\r\n  };\r\n\r\n  const handleAssignStaff = (incidentId) => {\r\n    // Here you can update the assigned staff for the incident in your state or make an API call.\r\n    // For this example, let's just update the local state.\r\n    const updatedIncidents = incidents.map((incident) => {\r\n      if (incident.id === incidentId) {\r\n        return { ...incident, assignedStaff: assignedStaff };\r\n      }\r\n      return incident;\r\n    });\r\n    setIncidents(updatedIncidents);\r\n    setAssignedStaff('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Reported Incidents</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Status</th>\r\n            <th>Date Created</th>\r\n            <th>Priority</th>\r\n            <th>Assigned Staff</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {incidents.map((incident) => (\r\n            <React.Fragment key={incident.id}>\r\n              <tr onClick={() => handleIncidentClick(incident)}>\r\n                <td>{incident.title}</td>\r\n                <td>{incident.status}</td>\r\n                <td>{incident.dateCreated}</td>\r\n                <td>{incident.priority}</td>\r\n                <td>{incident.assignedStaff || 'Unassigned'}</td>\r\n              </tr>\r\n              {selectedIncident && selectedIncident.id === incident.id && (\r\n                <tr>\r\n                  <td colSpan=\"5\">\r\n                    <p>Reporter: {incident.reporter}</p>\r\n                    <p>Description: {incident.description}</p>\r\n                    <div>\r\n                      <label htmlFor=\"assignStaff\">Assign Staff:</label>\r\n                      <select\r\n                        id=\"assignStaff\"\r\n                        value={assignedStaff}\r\n                        onChange={(e) => setAssignedStaff(e.target.value)}\r\n                      >\r\n                        <option value=\"\">Select Staff</option>\r\n                        <option value=\"staff1\">Staff 1</option>\r\n                        <option value=\"staff2\">Staff 2</option>\r\n                        {/* Add more staff options here... */}\r\n                      </select>\r\n                      <button onClick={() => handleAssignStaff(incident.id)}>Assign</button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExampleIncidentPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}